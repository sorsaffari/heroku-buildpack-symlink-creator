#!/usr/bin/env bash

set -xe

REALPATH="$(dirname "$0")/realpath"
BUILD_DIR="$("$REALPATH" "$1")" ## the temporary build path
RUNTIME_DIR="/app"

originals=$(find $BUILD_DIR/docs/ -name '*.yml') ## paths of the original .yml files
whitelist_dirs=(client_api concept_api views) # only create symlinks if the file is contained within the given directory names

for original in $originals; do
    original=${original/$BUILD_DIR/$RUNTIME_DIR} # original .yml file path
    echo 1
    echo $original
    symlink=${original#"$RUNTIME_DIR/docs/"} # remove prefix
    echo 2
    echo $symlink
    digits=${symlink:0:2}
    echo 3
    eho $digits
    re='^[0-9]+$'
    if [[ $digits =~ $re ]] ; then
        symlink=${symlink:3} # remove page number
    fi
    echo 4
    symlink="${symlink//-/_}" # repalce - with _
    echo 5
    echo $symlink
    symlink="${symlink/references\//}" # remove /references
    echo 6
    echo $symlink
    
    IFS='/' read -r -a splited_symlink <<< "$symlink" # split symlink into array by "/" as delimeter
    echo 7
    dir=${splited_symlink[0]} # get the directory to check against whitelist_dirs
    echo 8
    echo $dir

    symlink="$BUILD_DIR/_data/$symlink" # .yml symlink path
    
    echo 9
    echo $symlink

    if [[ " ${whitelist_dirs[@]} " =~ " ${dir} " ]]; then # allowed to create symlink
        echo 10
        mkdir -p "$(dirname $symlink)" # create the symlink's path if non-existent (-p)
        ln -s $original $symlink # create the symlink
        echo 11
    fi
done 
